apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2019-09-06T04:34:18Z"
  generation: 1
  labels:
    run: hw
  name: hw
  namespace: default
  resourceVersion: "1547"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/hw
  uid: bf4bcd2b-d5f1-409a-aae5-a95451e67d31
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: hw
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: hw
    spec:
      containers:
      - image: karthequian/helloworld
        imagePullPolicy: Always
        name: hw
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2019-09-06T04:34:46Z"
    lastUpdateTime: "2019-09-06T04:34:46Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2019-09-06T04:34:18Z"
    lastUpdateTime: "2019-09-06T04:34:46Z"
    message: ReplicaSet "hw-5ccdc9995d" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2019-09-06T04:36:55Z"
  labels:
    run: hw
  name: hw
  namespace: default
  resourceVersion: "1706"
  selfLink: /api/v1/namespaces/default/services/hw
  uid: 8ddb6362-a1f1-4265-8ebb-8b6b42287f64
spec:
  clusterIP: 10.111.147.205
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 30144
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: hw
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
